package com.shop.controller;

import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.shop.domain.CartListVO;
import com.shop.domain.CartVO;
import com.shop.domain.GoodsViewVO;
import com.shop.domain.MemberVO;
import com.shop.domain.ReplyListVO;
import com.shop.domain.ReplyVO;
import com.shop.service.ShopService;

@Controller
@RequestMapping("/shop/*")
public class ShopController {
	
	
	@Autowired
	ShopService service;
	
	
	@RequestMapping(value = "list", method = RequestMethod.GET)
	public void getList(@RequestParam("c") int cateCode,
						@RequestParam("l") int level, Model model) {
		
		List<GoodsViewVO> list = null;
		list = service.list(cateCode, level);
		
		model.addAttribute("list", list);
	}
	
	@RequestMapping(value="view", method = RequestMethod.GET)
	public void getView(@RequestParam("n") int gdsNum, Model model) {
		GoodsViewVO view = service.goodsView(gdsNum);
		
		//List<ReplyListVO> reply = service.replyList(gdsNum);
		
		model.addAttribute("view", view);
		//model.addAttribute("reply", reply);
		
	}
	/*
	@RequestMapping(value="view", method = RequestMethod.POST)
	public String getView(ReplyVO reply, HttpSession session) {
		
		MemberVO member = (MemberVO)session.getAttribute("member");
		reply.setUserId(member.getUserId());
		
		service.registReply(reply);
		
		return "redirect:/shop/view?n=" + reply.getGdsNum();
	}
	*/
	@ResponseBody
	@RequestMapping(value="/view/registReply", method = RequestMethod.POST)
	public void getView(ReplyVO reply, HttpSession session) {
		
		MemberVO member = (MemberVO)session.getAttribute("member");
		reply.setUserId(member.getUserId());
		
		service.registReply(reply);
		
	}
	
	// 상품 리뷰(댓글) 목록
	@ResponseBody
	@RequestMapping(value = "/view/replyList", method = RequestMethod.GET)
	public List<ReplyListVO> getReplyList(@RequestParam("n") int gdsNum) throws Exception {
	   
	 List<ReplyListVO> reply = service.replyList(gdsNum);
	 
	 return reply;
	} 
	
	// 상품 리뷰(댓글) 삭제
	@ResponseBody
	@RequestMapping(value = "/view/deleteReply", method = RequestMethod.POST)
	public int getReplyList(ReplyVO reply, HttpSession session) throws Exception {
	   
		int result = 0;
		
		MemberVO member = (MemberVO)session.getAttribute("member");
		String userId = service.idCheck(reply.getRepNum());
		
		
		if(member.getUserId().equals(userId)) {
			reply.setUserId(member.getUserId());
			service.deleteReply(reply);
			
			result = 1;
		}
		
	 return result;
	} 
	
		
		
	// 상품 리뷰 수정
	@ResponseBody
	@RequestMapping(value = "/view/modifyReply", method = RequestMethod.POST)
	public int modifyReply(ReplyVO reply, HttpSession session) throws Exception {

		int result = 0;

		MemberVO member = (MemberVO) session.getAttribute("member");
		String userId = service.idCheck(reply.getRepNum());
		
		System.out.println("repNum값" + reply.getRepNum());
		System.out.println("멤버아이디:" + member.getUserId());
		System.out.println("유저아이디:" + userId);

		if (member.getUserId().equals(userId)) {
			reply.setUserId(member.getUserId());
			service.modifyReply(reply);

			result = 1;
		}

		return result;
	}
	//카트담기
	@ResponseBody
	@RequestMapping(value = "/view/addCart", method = RequestMethod.POST)
	public int addCart(CartVO cart, HttpSession session) {
		
		int result = 0;
		
		MemberVO member = (MemberVO)session.getAttribute("member");
		
		if(member != null) {
			cart.setUserId(member.getUserId());
			service.addCart(cart);
			result = 1;
		}
		return result;
	}
	
	//카트목록
	@RequestMapping(value = "/view/addCart", method = RequestMethod.GET)
	public void getCartList(HttpSession session, Model model) {
		
		MemberVO member = (MemberVO)session.getAttribute("member");
		String userId = member.getUserId();
		
		List<CartListVO> cartList = service.cartList(userId);
		model.addAttribute("cartList",cartList);
	}
	

}
